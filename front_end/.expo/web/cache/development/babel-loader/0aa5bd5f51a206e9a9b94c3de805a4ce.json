{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Tina/Desktop/QuestGPS/front_end/App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport MapView from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      location: null\n    };\n\n    _this.findCoordinates = function () {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var location = JSON.stringify(position);\n\n        _this.setState({\n          location: location\n        });\n      }, function (error) {\n        return Alert.alert(error.message);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, React.createElement(MapView, {\n        style: styles.mapStyle,\n        initialRegion: {\n          latitude: 40.84985,\n          longitude: -73.86641,\n          latitudeDelta: 0,\n          longitudeDelta: 0.12\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, \" WELCOME TO THE BRONX \"), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }\n      }, \" QuestGPS by Ed Cache \"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 50\n  },\n  mapStyle: {\n    width: 425,\n    height: 500,\n    borderColor: green\n  }\n});","map":{"version":3,"sources":["/Users/Tina/Desktop/QuestGPS/front_end/App.js"],"names":["React","MapView","App","state","location","findCoordinates","navigator","geolocation","getCurrentPosition","position","JSON","stringify","setState","error","Alert","alert","message","enableHighAccuracy","timeout","maximumAge","styles","container","mapStyle","latitude","longitude","latitudeDelta","longitudeDelta","Component","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","width","height","borderColor","green"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mBAApB;;;;;;IAGqBC,G;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAIRC,e,GAAkB,YAAM;AACtBC,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CACE,UAAAC,QAAQ,EAAI;AACV,YAAML,QAAQ,GAAGM,IAAI,CAACC,SAAL,CAAeF,QAAf,CAAjB;;AACA,cAAKG,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAARA;AAAF,SAAd;AACD,OAJH,EAKE,UAAAS,KAAK;AAAA,eAAIC,KAAK,CAACC,KAAN,CAAYF,KAAK,CAACG,OAAlB,CAAJ;AAAA,OALP,EAME;AAAEC,QAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,QAAAA,OAAO,EAAE,KAArC;AAA4CC,QAAAA,UAAU,EAAE;AAAxD,OANF;AAQD,K;;;;;;;6BAEU;AACP,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAED,MAAM,CAACE,QAAvB;AAAiC,QAAA,aAAa,EAAE;AAC9CC,UAAAA,QAAQ,EAAE,QADoC;AAE9CC,UAAAA,SAAS,EAAE,CAAC,QAFkC;AAG9CC,UAAAA,aAAa,EAAE,CAH+B;AAI9CC,UAAAA,cAAc,EAAE;AAJ8B,SAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAOI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAPJ,EAQI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCARJ,CADF;AAYD;;;;EA9B4B1B,KAAK,CAAC2B,S;;SAAlBzB,G;AAiCnB,IAAMkB,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,UAAU,EAAE;AAJH,GADoB;AAO/BX,EAAAA,QAAQ,EAAE;AACRY,IAAAA,KAAK,EAAE,GADC;AAERC,IAAAA,MAAM,EAAE,GAFA;AAGRC,IAAAA,WAAW,EAAEC;AAHL;AAPqB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport MapView from 'react-native-maps';\nimport { StyleSheet, Text, View, Dimensions } from 'react-native';\n\nexport default class App extends React.Component {\n\n  state = {\n    location: null\n  }\n\n  findCoordinates = () => {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const location = JSON.stringify(position);\n        this.setState({ location });\n      },\n      error => Alert.alert(error.message),\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n  };\n\n    render() {\n      return (\n        <View style={styles.container}>\n          <MapView style={styles.mapStyle} initialRegion={{\n            latitude: 40.84985,\n            longitude: -73.86641,\n            latitudeDelta: 0,\n            longitudeDelta: 0.12\n            }}/>\n            <Text> WELCOME TO THE BRONX </Text>\n            <Text> QuestGPS by Ed Cache </Text>\n        </View>\n      );\n    }\n  }\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#fff',\n      alignItems: 'center',\n      paddingTop: 50\n    },\n    mapStyle: {\n      width: 425,\n      height: 500,\n      borderColor: green\n    },\n  });"]},"metadata":{},"sourceType":"module"}
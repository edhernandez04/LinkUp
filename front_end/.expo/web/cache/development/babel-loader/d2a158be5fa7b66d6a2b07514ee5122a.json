{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/Tina/Desktop/QuestGPS/front_end/Home.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Actions } from 'react-native-router-flux';\n\nvar Home = function (_React$Component) {\n  _inherits(Home, _React$Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      latitude: 0,\n      longitude: 0\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = JSON.stringify(position.coords.latitude);\n        var longitude = JSON.stringify(position.coords.longitude);\n\n        _this2.setState({\n          latitude: parseFloat(latitude),\n          longitude: parseFloat(longitude)\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"handleMovement\",\n    value: function handleMovement() {\n      var _this3 = this;\n\n      navigator.geolocation.getCurrentPosition(function (position) {\n        var latitude = JSON.stringify(position.coords.latitude);\n        var longitude = JSON.stringify(position.coords.longitude);\n\n        _this3.setState({\n          latitude: parseFloat(latitude),\n          longitude: parseFloat(longitude)\n        });\n      }, {\n        enableHighAccuracy: true,\n        timeout: 20000,\n        maximumAge: 1000\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }\n      }, React.createElement(MapView, {\n        style: styles.mapStyle,\n        region: {\n          latitude: this.state.latitude,\n          longitude: this.state.longitude,\n          latitudeDelta: 0,\n          longitudeDelta: 0.01\n        },\n        onChange: this.handleMovement(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      }, React.createElement(MapView.Marker, {\n        image: require(\"./assets/turtle.png\"),\n        coordinate: {\n          \"latitude\": this.state.latitude,\n          \"longitude\": this.state.longitude\n        },\n        title: \"You\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      })), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, \" Welcome to QuestGPS \"), React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, \" by Ed Cache \"), React.createElement(View, {\n        style: styles.menuContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Hero\",\n        style: styles.buttonStyle,\n        onPress: function onPress() {\n          return Actions.chat();\n        },\n        color: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Map\",\n        onPress: function onPress() {},\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Quest\",\n        onPress: function onPress() {},\n        color: \"green\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }\n      }, React.createElement(Button, {\n        title: \"Settings\",\n        onPress: function onPress() {},\n        color: \"grey\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return Home;\n}(React.Component);\n\nexport { Home as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    alignItems: 'center',\n    paddingTop: 50\n  },\n  mapStyle: {\n    width: 425,\n    height: 550\n  },\n  buttonStyle: {},\n  text: {\n    color: '#888',\n    paddingTop: 10\n  },\n  menuContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["/Users/Tina/Desktop/QuestGPS/front_end/Home.js"],"names":["React","MapView","PROVIDER_GOOGLE","Actions","Home","state","latitude","longitude","navigator","geolocation","getCurrentPosition","position","JSON","stringify","coords","setState","parseFloat","enableHighAccuracy","timeout","maximumAge","styles","container","mapStyle","latitudeDelta","longitudeDelta","handleMovement","require","text","menuContainer","buttonContainer","buttonStyle","chat","Component","StyleSheet","create","flex","backgroundColor","alignItems","paddingTop","width","height","color","flexDirection","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MapView, { PROVIDER_GOOGLE } from 'react-native-maps';\nimport { StyleSheet, Text, View, Button } from 'react-native';\nimport { Actions } from 'react-native-router-flux';\n\n\nexport default class Home extends React.Component {\n\n  state = {\n    latitude: 0,\n    longitude: 0\n  }\n\n  componentDidMount() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = JSON.stringify(position.coords.latitude)\n      const longitude = JSON.stringify(position.coords.longitude)\n      this.setState({ latitude: parseFloat(latitude), longitude: parseFloat(longitude) })\n    },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    )\n  }\n\n  handleMovement() {\n    navigator.geolocation.getCurrentPosition((position) => {\n      const latitude = JSON.stringify(position.coords.latitude)\n      const longitude = JSON.stringify(position.coords.longitude)\n      this.setState({ latitude: parseFloat(latitude), longitude: parseFloat(longitude) })\n    },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    )\n  }\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <MapView style={styles.mapStyle} region={{\n            latitude: this.state.latitude,\n            longitude: this.state.longitude,\n            latitudeDelta: 0,\n            longitudeDelta: 0.01\n          }} \n            onChange={this.handleMovement()}>\n\n        <MapView.Marker image={require('./assets/turtle.png')} coordinate={{\"latitude\":this.state.latitude, \"longitude\":this.state.longitude}} title={\"You\"}/>\n\n        </MapView>\n          <Text style={styles.text}> Welcome to QuestGPS </Text>\n          <Text style={styles.text}> by Ed Cache </Text>\n          \n          <View style={styles.menuContainer}>\n              <View style={styles.buttonContainer}>\n                <Button title={\"Hero\"} style={styles.buttonStyle} onPress={() => Actions.chat()} color=\"red\"/>\n              </View>\n              <View style={styles.buttonContainer}>\n                <Button title={\"Map\"} onPress={() => {}} color=\"blue\"/>\n              </View>\n              <View style={styles.buttonContainer}>\n                <Button title={\"Quest\"} onPress={() => {}} color=\"green\"/>\n              </View>\n              <View style={styles.buttonContainer}>\n                <Button title={\"Settings\"} onPress={() => {}} color=\"grey\"/>\n              </View>\n          </View>\n      </View>\n    );\n  }\n}\n  \n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      backgroundColor: '#000',\n      alignItems: 'center',\n      paddingTop: 50\n    },\n    mapStyle: {\n      width: 425,\n      height: 550\n    },\n    buttonStyle: {\n    },\n    text: {\n      color: '#888',\n      paddingTop: 10\n    },\n    menuContainer: {\n      flex: 1,\n      flexDirection: 'row',\n      alignItems: 'center',\n      justifyContent: 'center',\n  },\n  buttonContainer: {\n      flex: 1,\n  }\n  });"]},"metadata":{},"sourceType":"module"}